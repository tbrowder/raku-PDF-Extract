=begin pod

=head1 PDF::Extract

Simple binding of the 'pdftotext' command line utility

=head1 Installation

=head2 Step 1 

=begin item 
Linux (Debian/Ubuntu)

C<sudo apt-get install poppler-utils>
=end item

=begin item 
MacOS

C<brew install poppler>
=end item

=begin item 
Windows

C<choco install poppler>
=end item

=head2 Step 2

C<zef install PDF::Extract>

=head1 SYNOPSIS

=begin code
use PDF::Extract;
my $file = "Gazette.pdf";
my $extract = PDF::Extract.new: :$file;

say $extract.text;
say $extract.html;
say $extract.xml;

say $extract.so; # test for PDF headers
say $extract.info;
say $extract.info<CreationDate>;
...
=end code

=head1 DESCRIPTION

This module provides an interface to the 'pdftotext' program 
which is part of the 'poppler' library. The class provided, 'PDF::Extract',
has the following attributes and methods to interrogate its PDF file:

=head2 Attributes

=begin item
C<has $.file>

Path of the PDF file
=end item

=begin item
C<has $.first is rw = 1>

The first page to extract
=end item

=begin item
C<has $.last is rw = 0>

The last page to extract (0: all)
=end item

=head2 Methods

=begin item
C<range($first..$last)>

First and last pages to extract
=end item

=begin item
C<text>

Extracts text from pages range
=end item

=begin item
C<html>

Extracts html from pages range
=end item

=begin item
C<xml>

Extracts xml from pages range
=end item

=begin item
C<pdfinfo>

Has pdfinfo? (Bool)
=end item

=begin item
C<info>

Extracts pdfinfo
=end item

=head1 COPYRIGHT and LICENSE

Copyright Â© 2023 Henley Cloud Consulting Ltd.

This library is free software; you may redistribute it or modify it under the Artistic License 2.0.

=end pod
